// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using part4.Data;

namespace part4.Data.Migrations
{
    [DbContext(typeof(OrderContext))]
    partial class OrderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("part4.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UserID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("part4.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("ProductID");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            Description = "A small and lightweight PC for basic computing tasks.",
                            ImageName = "mini1.jpg",
                            Name = "The Mini",
                            Price = 599.99m
                        },
                        new
                        {
                            ProductID = 2,
                            Description = "A Business PC for professional applications.",
                            ImageName = "business1.jpg",
                            Name = "The Business",
                            Price = 799.99m
                        },
                        new
                        {
                            ProductID = 3,
                            Description = "A PC for playing all of the latest and greatest video games.",
                            ImageName = "gamer1.jpg",
                            Name = "The Gamer",
                            Price = 999.99m
                        });
                });

            modelBuilder.Entity("part4.Models.Upgrade", b =>
                {
                    b.Property<int>("UpgradeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("UpgradeCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpgradeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpgradePrice")
                        .HasColumnType("int");

                    b.HasKey("UpgradeID");

                    b.HasIndex("ProductID");

                    b.ToTable("Upgrade");

                    b.HasData(
                        new
                        {
                            UpgradeID = 1,
                            UpgradeCategory = "Storage",
                            UpgradeName = "256GB SSD",
                            UpgradePrice = 50
                        },
                        new
                        {
                            UpgradeID = 2,
                            UpgradeCategory = "CPU",
                            UpgradeName = "i5 9600k",
                            UpgradePrice = 200
                        },
                        new
                        {
                            UpgradeID = 3,
                            UpgradeCategory = "Memory",
                            UpgradeName = "16GB RAM",
                            UpgradePrice = 100
                        });
                });

            modelBuilder.Entity("part4.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("part4.Models.Order", b =>
                {
                    b.HasOne("part4.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("part4.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("part4.Models.Upgrade", b =>
                {
                    b.HasOne("part4.Models.Product", null)
                        .WithMany("Upgrades")
                        .HasForeignKey("ProductID");
                });
#pragma warning restore 612, 618
        }
    }
}
